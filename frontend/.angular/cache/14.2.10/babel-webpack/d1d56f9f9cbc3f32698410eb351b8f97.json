{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/recipe.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../services/photo.service\";\nimport * as i5 from \"@ionic/storage\";\nimport * as i6 from \"@ionic/angular\";\nexport let UpdateRecipePage = /*#__PURE__*/(() => {\n  class UpdateRecipePage {\n    constructor(recipeService, activatedRoute, formBuilder, router, photoService, storage) {\n      this.recipeService = recipeService;\n      this.activatedRoute = activatedRoute;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.photoService = photoService;\n      this.storage = storage;\n      this.capturedPhoto = '';\n      // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n      this.imageSaved = '';\n      //    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n      this.token = this.storage.get(\"token\");\n      //this.token = 'asdfasdf assdf asdf sdf sdf';\n    }\n\n    ngOnInit() {\n      console.log('llego hasta aqui para update');\n      /*  this.findRecipe(this.id);\r\n        this.updateRecipeForm = this.formBuilder.group({\r\n          tittle: [''],\r\n          category: [''],\r\n          filename: ['']\r\n        });*/\n    }\n    /* async findRecipe(id){\r\n       this.recipeService.getRecipe(this.id, this.token).subscribe((data) => {\r\n       this.imageSaved = data['filename'];\r\n       this.updateRecipeForm.setValue({\r\n         tittle: data['tittle'],\r\n         category: data['category'],\r\n         filename: data['filename']\r\n       });\r\n     });\r\n    }*/\n    onSubmit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        //if (!this.updateRecipeForm.valid) {\n        //   return false;\n        // } else {\n        let blob = null;\n        /*   if (this.capturedPhoto !== '') {\r\n             const response = await fetch(this.capturedPhoto);\r\n             blob = await response.blob();\r\n           }\r\n           this.recipeService\r\n           .updateRecipe(this.id, this.updateRecipeForm.value, blob, this.token)\r\n           .subscribe(() => {\r\n             this.updateRecipeForm.reset();\r\n             this.router.navigate(['/ypo-are-logged-in']);\r\n           });*/\n        // }\n      });\n    }\n\n    pickImage() {\n      this.photoService.pickImage().then(data => {\n        this.capturedPhoto = data.webPath;\n      });\n    }\n  }\n  UpdateRecipePage.ɵfac = function UpdateRecipePage_Factory(t) {\n    return new (t || UpdateRecipePage)(i0.ɵɵdirectiveInject(i1.RecipeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.PhotoService), i0.ɵɵdirectiveInject(i5.Storage));\n  };\n  UpdateRecipePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateRecipePage,\n    selectors: [[\"app-update-recipe\"]],\n    decls: 24,\n    vars: 0,\n    consts: [[\"slot\", \"start\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"lines\", \"full\"], [\"position\", \"floating\"], [\"formControlName\", \"tittle\", \"type\", \"text\", \"required\", \"\"], [\"formControlName\", \"category\", \"type\", \"text\", \"required\", \"\"], [\"type\", \"submit\", \"color\", \"primary\", \"expand\", \"block\"]],\n    template: function UpdateRecipePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n        i0.ɵɵelement(3, \"ion-back-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Edit Recipe\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\")(7, \"h1\");\n        i0.ɵɵtext(8, \"update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \" --> \");\n        i0.ɵɵelementStart(10, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateRecipePage_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(12, \"ion-item\", 3)(13, \"ion-label\", 4);\n        i0.ɵɵtext(14, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"ion-input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-item\", 3)(17, \"ion-label\", 4);\n        i0.ɵɵtext(18, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"ion-input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ion-row\")(21, \"ion-col\")(22, \"ion-button\", 7);\n        i0.ɵɵtext(23, \"Update\");\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgForm, i6.IonBackButton, i6.IonButton, i6.IonButtons, i6.IonCol, i6.IonContent, i6.IonHeader, i6.IonInput, i6.IonItem, i6.IonLabel, i6.IonRow, i6.IonTitle, i6.IonToolbar, i6.TextValueAccessor, i6.IonBackButtonDelegate]\n  });\n  return UpdateRecipePage;\n})();","map":null,"metadata":{},"sourceType":"module"}