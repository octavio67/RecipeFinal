{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/recipe.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../services/photo.service\";\nimport * as i5 from \"@ionic/storage\";\nimport * as i6 from \"@ionic/angular\";\nexport let UpdateRecipePage = /*#__PURE__*/(() => {\n  class UpdateRecipePage {\n    constructor(recipeService, activatedRoute, formBuilder, router, photoService, storage) {\n      this.recipeService = recipeService;\n      this.activatedRoute = activatedRoute;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.photoService = photoService;\n      this.storage = storage;\n      this.isSubmitted = false;\n      this.capturedPhoto = '';\n      // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n      this.imageSaved = '';\n      this.id = this.activatedRoute.snapshot.paramMap.get('id');\n      //  this.token = this.storage.get(\"token\");\n    }\n\n    ionViewWillEnter() {\n      this.findRecipe(this.id);\n      this.updateRecipeForm = this.formBuilder.group({\n        tittle: [''],\n        category: [''],\n        filename: ['']\n      });\n      this.capturedPhoto = '';\n    }\n    ngOnInit() {\n      this.findRecipe(this.id);\n      this.updateRecipeForm = this.formBuilder.group({\n        tittle: [''],\n        category: [''],\n        filename: ['']\n      });\n      this.capturedPhoto = '';\n      //   this.updateRecipeForm.reset();\n    }\n\n    findRecipe(id) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let token = yield this.storage.get(\"token\");\n        this.recipeService.getRecipe(this.id, token).subscribe(data => __awaiter(this, void 0, void 0, function* () {\n          this.imageSaved = data['filename'];\n          this.updateRecipeForm.setValue({\n            tittle: data['tittle'],\n            category: data['category'],\n            filename: data['filename']\n          });\n        }));\n      });\n    }\n    onSubmit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.isSubmitted = true;\n        if (!this.updateRecipeForm.valid) {\n          return false;\n        } else {\n          let blob = null;\n          if (this.capturedPhoto !== \"\") {\n            const response = yield fetch(this.capturedPhoto);\n            blob = yield response.blob();\n          } else {\n            const response = yield fetch(this.imageSaved);\n            blob = yield response.blob();\n          }\n          (yield this.recipeService.updateRecipe(this.id, this.updateRecipeForm.value, blob)).subscribe(data => {\n            console.log('¡Photo sent!');\n            //    this.updateRecipeForm.reset();\n            this.router.navigate(['/you-are-logged-in']);\n          });\n        }\n      });\n    }\n    takePhoto() {\n      this.photoService.takePhoto().then(data => {\n        try {\n          this.capturedPhoto = data.webPath;\n        } catch (e) {\n          console.log('Imagen descartada al tomar foto');\n          this.capturedPhoto = null;\n        }\n      });\n    }\n    pickImage() {\n      this.photoService.pickImage().then(data => {\n        this.capturedPhoto = data.webPath;\n      });\n    }\n    discardImage() {\n      this.capturedPhoto = null;\n    }\n    get errorControl() {\n      return this.updateRecipeForm.controls;\n    }\n  }\n  UpdateRecipePage.ɵfac = function UpdateRecipePage_Factory(t) {\n    return new (t || UpdateRecipePage)(i0.ɵɵdirectiveInject(i1.RecipeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.PhotoService), i0.ɵɵdirectiveInject(i5.Storage));\n  };\n  UpdateRecipePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateRecipePage,\n    selectors: [[\"app-update-recipe\"]],\n    decls: 33,\n    vars: 1,\n    consts: [[\"slot\", \"start\"], [1, \"ion-align-items-center\"], [\"size\", \"6\"], [\"color\", \"primary\", \"fill\", \"outline\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"camera-outline\"], [\"slot\", \"start\", \"name\", \"image-outline\"], [\"color\", \"danger\", \"fill\", \"outline\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"aperture\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"lines\", \"full\"], [\"position\", \"floating\"], [\"formControlName\", \"tittle\", \"type\", \"text\", \"required\", \"\"], [\"formControlName\", \"category\", \"type\", \"text\", \"required\", \"\"], [\"type\", \"submit\", \"color\", \"primary\", \"expand\", \"block\"]],\n    template: function UpdateRecipePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n        i0.ɵɵelement(3, \"ion-back-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Update Recipe\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-grid\")(8, \"ion-row\", 1);\n        i0.ɵɵelement(9, \"ion-col\", 2);\n        i0.ɵɵelementStart(10, \"ion-col\", 2)(11, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function UpdateRecipePage_Template_ion_button_click_11_listener() {\n          return ctx.takePhoto();\n        });\n        i0.ɵɵelement(12, \"ion-icon\", 4);\n        i0.ɵɵtext(13, \" Take a photo \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function UpdateRecipePage_Template_ion_button_click_14_listener() {\n          return ctx.pickImage();\n        });\n        i0.ɵɵelement(15, \"ion-icon\", 5);\n        i0.ɵɵtext(16, \" Pick an image \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-button\", 6);\n        i0.ɵɵlistener(\"click\", function UpdateRecipePage_Template_ion_button_click_17_listener() {\n          return ctx.discardImage();\n        });\n        i0.ɵɵelement(18, \"ion-icon\", 7);\n        i0.ɵɵtext(19, \" Discard image \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateRecipePage_Template_form_ngSubmit_20_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(21, \"ion-item\", 9)(22, \"ion-label\", 10);\n        i0.ɵɵtext(23, \"Tittle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"ion-input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"ion-item\", 9)(26, \"ion-label\", 10);\n        i0.ɵɵtext(27, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"ion-input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"ion-row\")(30, \"ion-col\")(31, \"ion-button\", 13);\n        i0.ɵɵtext(32, \"Update\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateRecipeForm);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i6.IonBackButton, i6.IonButton, i6.IonButtons, i6.IonCol, i6.IonContent, i6.IonGrid, i6.IonHeader, i6.IonIcon, i6.IonInput, i6.IonItem, i6.IonLabel, i6.IonRow, i6.IonTitle, i6.IonToolbar, i6.TextValueAccessor, i6.IonBackButtonDelegate, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return UpdateRecipePage;\n})();","map":null,"metadata":{},"sourceType":"module"}