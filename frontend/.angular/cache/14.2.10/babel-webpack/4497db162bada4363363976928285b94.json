{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddRecipePage = class AddRecipePage {\n  constructor(formBuilder, activatedRoute, recipeService, categoryService, photoService, router, storage) {\n    this.formBuilder = formBuilder;\n    this.activatedRoute = activatedRoute;\n    this.recipeService = recipeService;\n    this.categoryService = categoryService;\n    this.photoService = photoService;\n    this.router = router;\n    this.storage = storage;\n    this.categories = [];\n    this.isSubmitted = false;\n    this.capturedPhoto = '';\n    //  this.userId = this.activatedRoute.snapshot.paramMap.get('userId');\n  }\n\n  ionViewWillEnter() {\n    this.recipeForm.reset();\n    this.isSubmitted = false;\n    this.capturedPhoto = '';\n  }\n  ngOnInit() {\n    this.getAllCategories();\n    this.recipeForm = this.formBuilder.group({\n      tittle: ['', [Validators.required]],\n      category: ['', [Validators.required]]\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  getAllCategories() {\n    return __awaiter(this, void 0, void 0, function* () {\n      let token = yield this.storage.get(\"token\");\n      this.categoryService.getCategories(token).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n        console.log(res);\n        this.categories = res;\n      }), error => {\n        console.log(error);\n        console.log(\"User not authenticated. Please log in\");\n        this.router.navigateByUrl(\"/home\");\n      });\n    });\n  }\n  submitForm() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.isSubmitted = true;\n      if (!this.recipeForm.valid) {\n        console.log('Please provide all the required values!');\n        return false;\n      } else {\n        let blob = null;\n        let userId = null;\n        if (this.capturedPhoto !== '') {\n          const response = yield fetch(this.capturedPhoto);\n          blob = yield response.blob();\n        }\n        (yield this.recipeService.createRecipe(userId, this.recipeForm.value, blob)).subscribe(data => {\n          console.log('Â¡Photo sent!');\n          this.router.navigateByUrl('/you-are-logged-in');\n        });\n      }\n    });\n  }\n  takePhoto() {\n    this.photoService.takePhoto().then(data => {\n      try {\n        this.capturedPhoto = data.webPath;\n      } catch (e) {\n        console.log('Imagen descartada al tomar foto');\n        this.capturedPhoto = null;\n      }\n    });\n  }\n  pickImage() {\n    this.photoService.pickImage().then(data => {\n      this.capturedPhoto = data.webPath;\n    });\n  }\n  discardImage() {\n    this.capturedPhoto = null;\n  }\n  get errorControl() {\n    return this.recipeForm.controls;\n  }\n};\nAddRecipePage = __decorate([Component({\n  selector: 'app-add-recipe',\n  templateUrl: 'add-recipe.page.html',\n  styleUrls: ['add-recipe.page.scss']\n})], AddRecipePage);\nexport { AddRecipePage };","map":null,"metadata":{},"sourceType":"module"}