{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ionic/storage\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    // nombre: string;\n    constructor(httpClient, storage) {\n      this.httpClient = httpClient;\n      this.storage = storage;\n      this.AUTH_SERVER_ADDRESS = 'http://localhost:4000';\n    }\n    getOptions(user) {\n      let base64UserAndPassword = window.btoa(user.email + \":\" + user.password);\n      let basicAccess = 'Basic ' + base64UserAndPassword;\n      let options = {\n        headers: {\n          'Authorization': basicAccess,\n          'Content-Type': 'application/json'\n        }\n        //, withCredentials: true\n      };\n\n      return options;\n    }\n    register(user) {\n      console.log(user);\n      return this.httpClient.post(`${this.AUTH_SERVER_ADDRESS}/api/users/`, user, this.getOptions(user)).pipe(tap(res => __awaiter(this, void 0, void 0, function* () {\n        console.log(user);\n        if (res.user) {\n          yield this.storage.set(\"token\", res.access_token);\n        }\n      })));\n    }\n    login(user) {\n      return this.httpClient.post(`${this.AUTH_SERVER_ADDRESS}/api/users/signin`, null, this.getOptions(user)).pipe(tap(res => __awaiter(this, void 0, void 0, function* () {\n        if (res.user) {\n          yield this.storage.set(\"token\", res.access_token);\n          //    await this.storage.set(\"usuario\", res.user.id);\n          //   this.storage.set(\"name\", res.user.username);\n          // await  this.storage.set(\"usuarioId\", res.user.id);\n          /*   await this.storage.set(\"name\", res.user.username).then((name) => {\r\n              this.nombre = name;\r\n            });*/\n        }\n      })));\n    }\n\n    logout() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.storage.remove(\"token\");\n      });\n    }\n    isLoggedIn() {\n      return __awaiter(this, void 0, void 0, function* () {\n        // return this.authSubject.asObservable();\n        let token = yield this.storage.get(\"token\");\n        if (token) {\n          //Just check if exists. This should be checked with current date\n          return true;\n        }\n        return false;\n      });\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Storage));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}