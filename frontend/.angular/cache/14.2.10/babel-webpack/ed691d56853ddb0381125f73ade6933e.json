{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ionic/storage\";\nexport class Ingredients {}\nexport let IngredientService = /*#__PURE__*/(() => {\n  class IngredientService {\n    constructor(httpClient, storage) {\n      this.httpClient = httpClient;\n      this.storage = storage;\n      this.endPoint = \"http://localhost:4000/api/recipes\";\n      this.AUTH_SERVER_ADDRESS = \"http://localhost:4000\";\n    }\n    getOptions(token) {\n      let bearerAccess = \"Bearer \" + token;\n      let options = {\n        headers: {\n          Authorization: bearerAccess,\n          // 'Content-Type' : 'application/x-www-form-urlencoded',\n          \"Content-Type\": \"application/json\"\n        }\n        //, withCredentials: true\n      };\n\n      return options;\n    }\n    createIngredient(ingredients, recipeId) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const formData = new FormData();\n        formData.append(\"unit\", ingredients.unit);\n        formData.append(\"measure\", ingredients.measure);\n        formData.append(\"ingredient\", ingredients.ingredient);\n        formData.append(\"recipeId\", ingredients);\n      });\n    }\n    getMyIngredients(recipeId, token) {\n      let myOptions = this.getOptions(token);\n      //  return this.httpClient.get<Recipe[]>(this.endPoint + '/' + id );\n      return this.httpClient.get(`${this.AUTH_SERVER_ADDRESS}/api/recipe_ingredients/recipe/` + recipeId, myOptions);\n    }\n  }\n  IngredientService.ɵfac = function IngredientService_Factory(t) {\n    return new (t || IngredientService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Storage));\n  };\n  IngredientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IngredientService,\n    factory: IngredientService.ɵfac,\n    providedIn: 'root'\n  });\n  return IngredientService;\n})();","map":null,"metadata":{},"sourceType":"module"}