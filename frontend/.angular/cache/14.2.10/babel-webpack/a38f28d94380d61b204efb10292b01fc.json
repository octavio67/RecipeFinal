{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nexport class Recipe {}\nlet UpdateRecipePage = class UpdateRecipePage {\n  constructor(recipeService, categoryService, activatedRoute, formBuilder, router, photoService, storage, recipe) {\n    this.recipeService = recipeService;\n    this.categoryService = categoryService;\n    this.activatedRoute = activatedRoute;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.photoService = photoService;\n    this.storage = storage;\n    this.recipe = recipe;\n    this.categories = [];\n    this.isSubmitted = false;\n    this.capturedPhoto = '';\n    // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n    this.imageSaved = '';\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.categoryId = this.recipe.categoryId;\n  }\n  ionViewWillEnter() {\n    this.findRecipe(this.id);\n    this.updateRecipeForm = this.formBuilder.group({\n      tittle: [''],\n      description: [''],\n      filename: [''],\n      categoryId: ['']\n    });\n    this.capturedPhoto = '';\n  }\n  ngOnInit() {\n    this.findRecipe(this.id);\n    this.updateRecipeForm = this.formBuilder.group({\n      tittle: [''],\n      description: [''],\n      filename: [''],\n      categoryId: ['']\n    });\n    this.capturedPhoto = '';\n    //   this.updateRecipeForm.reset();\n    this.getCategory(this.categoryId);\n    this.getAllCategories();\n  }\n  findRecipe(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let token = yield this.storage.get(\"token\");\n      this.recipeService.getRecipe(this.id, token).subscribe(data => __awaiter(this, void 0, void 0, function* () {\n        this.imageSaved = data['filename'];\n        this.updateRecipeForm.setValue({\n          tittle: data['tittle'],\n          description: data['description'],\n          filename: data['filename'],\n          categoryId: data['categoryId']\n        });\n        this.categoryId = this.recipe.categoryId;\n      }));\n    });\n  }\n  ObtenerCategoryId(e) {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log(\"valor seleccionado\" + e.detail.value);\n      let categoryId = yield this.storage.set(\"categoryId_st\", e.detail.value);\n    });\n  }\n  getCategory(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let token = yield this.storage.get(\"token\");\n      this.categoryService.getCategory(id, token).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n        console.log(\"respuesta del res\" + res);\n        //this.categories.push(res);\n        this.categoryId = this.categories.push(res);\n        console.log(\"respuesta del push\" + this.categories.push(res));\n      }), error => {\n        console.log(error);\n        console.log(\"User not authenticated. Please log in\");\n        this.router.navigateByUrl(\"/home\");\n      });\n    });\n  }\n  getAllCategories() {\n    return __awaiter(this, void 0, void 0, function* () {\n      let token = yield this.storage.get(\"token\");\n      this.categoryService.getCategories(token).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n        console.log(res);\n        this.categories = res;\n      }), error => {\n        console.log(error);\n        console.log(\"User not authenticated. Please log in\");\n        this.router.navigateByUrl(\"/home\");\n      });\n    });\n  }\n  onSubmit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.isSubmitted = true;\n      if (!this.updateRecipeForm.valid) {\n        return false;\n      } else {\n        let blob = null;\n        if (this.capturedPhoto !== \"\") {\n          const response = yield fetch(this.capturedPhoto);\n          blob = yield response.blob();\n        }\n        (yield this.recipeService.updateRecipe(this.id, this.updateRecipeForm.value, blob, this.getCategory(this.categoryId))).subscribe(data => {\n          console.log('Â¡Photo sent!');\n          this.updateRecipeForm.reset();\n          this.router.navigate(['/you-are-logged-in']);\n        });\n      }\n    });\n  }\n  takePhoto() {\n    this.photoService.takePhoto().then(data => {\n      try {\n        this.capturedPhoto = data.webPath;\n      } catch (e) {\n        console.log('Imagen descartada al tomar foto');\n        this.capturedPhoto = null;\n      }\n    });\n  }\n  pickImage() {\n    this.photoService.pickImage().then(data => {\n      this.capturedPhoto = data.webPath;\n    });\n  }\n  discardImage() {\n    this.capturedPhoto = null;\n  }\n  get errorControl() {\n    return this.updateRecipeForm.controls;\n  }\n};\nUpdateRecipePage = __decorate([Component({\n  selector: \"app-update-recipe\",\n  templateUrl: \"./update-recipe.page.html\",\n  styleUrls: [\"./update-recipe.page.scss\"]\n})], UpdateRecipePage);\nexport { UpdateRecipePage };","map":null,"metadata":{},"sourceType":"module"}