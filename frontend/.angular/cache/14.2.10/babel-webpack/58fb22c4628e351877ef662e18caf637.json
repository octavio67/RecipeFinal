{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/recipe.service\";\nimport * as i4 from \"./../services/category.service\";\nimport * as i5 from \"../services/photo.service\";\nimport * as i6 from \"@ionic/storage\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ionic/angular\";\nfunction AddRecipePage_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"p\");\n    i0.ɵɵtext(2, \"Pizza\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4, \"Hawaii\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h1\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(category_r1.name);\n  }\n}\nexport let AddRecipePage = /*#__PURE__*/(() => {\n  class AddRecipePage {\n    constructor(formBuilder, activatedRoute, recipeService, categoryService, photoService, router, storage) {\n      this.formBuilder = formBuilder;\n      this.activatedRoute = activatedRoute;\n      this.recipeService = recipeService;\n      this.categoryService = categoryService;\n      this.photoService = photoService;\n      this.router = router;\n      this.storage = storage;\n      this.categories = [];\n      this.isSubmitted = false;\n      this.capturedPhoto = '';\n      //  this.userId = this.activatedRoute.snapshot.paramMap.get('userId');\n    }\n\n    ionViewWillEnter() {\n      /*  this.recipeForm.reset();\r\n       this.isSubmitted = false;\r\n       this.capturedPhoto = ''; */\n    }\n    ngOnInit() {\n      this.getAllCategories;\n      c;\n      /*  this.recipeForm = this.formBuilder.group({\r\n          tittle: ['', [Validators.required]],\r\n          category: ['', [Validators.required]]\r\n        }); */\n    }\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    getAllCategories() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let token = yield this.storage.get(\"token\");\n        this.categoryService.getCategories(token).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n          console.log(res);\n          this.categories = res;\n        }), error => {\n          console.log(error);\n          console.log(\"User not authenticated. Please log in\");\n          this.router.navigateByUrl(\"/you-are-logged-in\");\n        });\n      });\n    }\n    submitForm() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.isSubmitted = true;\n        if (!this.recipeForm.valid) {\n          console.log('Please provide all the required values!');\n          return false;\n        } else {\n          let blob = null;\n          let userId = null;\n          if (this.capturedPhoto !== '') {\n            const response = yield fetch(this.capturedPhoto);\n            blob = yield response.blob();\n          }\n          (yield this.recipeService.createRecipe(userId, this.recipeForm.value, blob)).subscribe(data => {\n            console.log('¡Photo sent!');\n            this.router.navigateByUrl('/you-are-logged-in');\n          });\n        }\n      });\n    }\n    takePhoto() {\n      this.photoService.takePhoto().then(data => {\n        try {\n          this.capturedPhoto = data.webPath;\n        } catch (e) {\n          console.log('Imagen descartada al tomar foto');\n          this.capturedPhoto = null;\n        }\n      });\n    }\n    pickImage() {\n      this.photoService.pickImage().then(data => {\n        this.capturedPhoto = data.webPath;\n      });\n    }\n    discardImage() {\n      this.capturedPhoto = null;\n    }\n    get errorControl() {\n      return this.recipeForm.controls;\n    }\n  }\n  AddRecipePage.ɵfac = function AddRecipePage_Factory(t) {\n    return new (t || AddRecipePage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.RecipeService), i0.ɵɵdirectiveInject(i4.CategoryService), i0.ɵɵdirectiveInject(i5.PhotoService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i6.Storage));\n  };\n  AddRecipePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddRecipePage,\n    selectors: [[\"app-add-recipe\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[\"slot\", \"start\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AddRecipePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n        i0.ɵɵelement(3, \"ion-back-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Add Recipe\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-list\");\n        i0.ɵɵtemplate(8, AddRecipePage_ion_item_8_Template, 7, 1, \"ion-item\", 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    dependencies: [i7.NgForOf, i8.IonBackButton, i8.IonButtons, i8.IonContent, i8.IonHeader, i8.IonItem, i8.IonList, i8.IonTitle, i8.IonToolbar, i8.IonBackButtonDelegate]\n  });\n  return AddRecipePage;\n})();","map":null,"metadata":{},"sourceType":"module"}